import { useState, useEffect } from 'react';
import { useAuth } from '../AuthContext';

export default function ReviewsList({ movieId }) {
  const [reviews, setReviews] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const { user } = useAuth();
  const [editingReview, setEditingReview] = useState(null);
  const [editForm, setEditForm] = useState({
    rating: 5,
    review: ''
  });

  useEffect(() => {
    console.log('AuthContext User:', user); // üêõ –î–µ–±—ä–≥: user –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  }, [user]);

  const fetchReviews = async () => {
    try {
      setLoading(true);
      setError(null);
      
      const response = await fetch(`https://localhost:7115/api/movieratings/${movieId}`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${user?.token}`
        },
        credentials: 'include'
      });
  
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
  
      const data = await response.json();
      console.log('API Response:', data);
      setReviews(data.ratings); // –£–≤–µ—Ä–µ—Ç–µ —Å–µ, —á–µ –≤—Å—è–∫–æ —Ä–µ–≤—é –∏–º–∞ movieId
    } catch (err) {
      console.error('Error fetching reviews:', err);
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };
  
  useEffect(() => {
    fetchReviews();
  }, [movieId, user?.token]);

  const handleEditSubmit = async (e) => {
    e.preventDefault();
    
    if (!movieId) { // –ò–∑–ø–æ–ª–∑–≤–∞–º–µ movieId –æ—Ç –ø—Ä–æ–ø—Å, –Ω–µ –æ—Ç editingReview
      console.error('MovieId –Ω–µ –µ –Ω–∞–ª–∏—á–µ–Ω –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ!');
      setError('–ù—è–º–∞ –Ω–∞–ª–∏—á–µ–Ω MovieId!');
      return;
    }
    
    try {
      const response = await fetch(`https://localhost:7115/api/movieratings/rate`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${user.token}`
        },
        body: JSON.stringify({
          movieId: Number(movieId),  // –¢–æ–≤–∞ –µ –∫–ª—é—á–æ–≤–æ - –∏–∑–ø–æ–ª–∑–≤–∞–º–µ –ø—Ä–æ–ø—Å movieId
          rating: Number(editForm.rating),
          review: editForm.review
        })
      });
  
      if (!response.ok) throw new Error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∞–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è');
      setEditingReview(null);
      fetchReviews();
    } catch (err) {
      console.error(err);
      setError(err.message);
    }
  };
  


  const handleDelete = async (reviewId) => {
    if (!window.confirm('–°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ?')) return;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ movieId –µ –≤–∞–ª–∏–¥–Ω–æ
    if (!movieId) {
      console.error('movieId –µ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω!');
      setError('movieId –µ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω!');
      return;
    }
  
    try {
      const response = await fetch(`https://localhost:7115/api/movieratings/${movieId}`, {
        method: 'DELETE',
        headers: {
          'Authorization': `Bearer ${user.token}`
        }
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ');
      }
      
      fetchReviews();
    } catch (err) {
      console.error(err);
      setError(err.message);
    }
  };

  if (loading) return <div className="text-white py-4">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ–≤—é—Ç–∞...</div>;
  if (error) return <div className="text-red-500 py-4">–ì—Ä–µ—à–∫–∞: {error}</div>;
  if (reviews.length === 0) return <div className="text-gray-400 py-4">–ù—è–º–∞ —Ä–µ–≤—é—Ç–∞ –≤—Å–µ –æ—â–µ</div>;

  return (
    <div className="space-y-6 mt-6">
      <h3 className="text-2xl font-bold text-white">
        –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏ —Ä–µ–≤—é—Ç–∞ ({reviews.length})
      </h3>

      {reviews.map((review) => {
        console.log('Review MovieId:', review.movieId); // –ü–æ—Å—Ç–∞–≤–∏ –ª–æ–≥ –∑–∞ movieId

        const isOwner = user?.id && review.userId && user.id.toString() === review.userId.toString();

        return (
          <div key={`${review.userId}-${review.ratedOn}`} className="bg-gray-800 p-6 rounded-lg shadow-lg">
            <div className="flex items-center justify-between mb-3">
              <div className="flex items-center">
                <span className="text-yellow-400 font-bold text-lg mr-2">{review.rating}/5</span>
                <span className="text-gray-300 text-sm">{new Date(review.ratedOn).toLocaleDateString('bg-BG')}</span>
              </div>
              <span className="text-blue-300 font-medium">
                {review.userName || '–ê–Ω–æ–Ω–∏–º–µ–Ω –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª'}
              </span>
            </div>

            <p className="text-white text-lg mb-2">{review.review || "–ù—è–º–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–µ–Ω —Ç–µ–∫—Å—Ç"}</p>

            {isOwner && (
              <div className="flex gap-2 mt-3">
                <button
                  onClick={() => {
                    // –¢–æ–≤–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –±—ä–¥–µ –∑–∞–¥–∞–¥–µ–Ω–æ –ø—Ä–µ–¥–∏ –¥–∞ –≤–ª–µ–∑–µ—Ç–µ –≤ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ—Ç–æ
                    setEditingReview(review); // review —Å—ä–¥—ä—Ä–∂–∞ movieId
                    setEditForm({
                      rating: review.rating,  
                      review: review.review
                    });
                    console.log('Editing review for movieId:', review.movieId); // –ü—Ä–æ–≤–µ—Ä–∫–∞
                  }}
                  className="px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded transition"
                >
                  –†–µ–¥–∞–∫—Ç–∏—Ä–∞–π
                </button>

                <button
  onClick={() => handleDelete(movieId)} // –ü—Ä–∞—â–∞–º–µ movieId –æ—Ç –ø—Ä–æ–ø—Å
  className="px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded transition"
>
  –ò–∑—Ç—Ä–∏–π
</button>
              </div>
            )}
          </div>
        );
      })}

      {editingReview && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-gray-800 p-6 rounded-lg w-full max-w-md">
            <h3 className="text-xl font-bold text-white mb-4">–†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ä–µ–≤—é</h3>
            <form onSubmit={handleEditSubmit}>
              <div className="mb-4">
                <label className="block text-white mb-2">–†–µ–π—Ç–∏–Ω–≥:</label>
                <select
                  value={editForm.rating}
                  onChange={(e) => setEditForm({ ...editForm, rating: e.target.value })}
                  className="w-full p-2 rounded bg-gray-700 text-white"
                >
                  {[1, 2, 3, 4, 5].map(num => (
                    <option key={num} value={num}>{num}</option>
                  ))}
                </select>
              </div>
              <div className="mb-4">
                <label className="block text-white mb-2">–†–µ–≤—é:</label>
                <textarea
                  value={editForm.review}
                  onChange={(e) => setEditForm({ ...editForm, review: e.target.value })}
                  className="w-full p-2 rounded bg-gray-700 text-white"
                  rows="4"
                />
              </div>
              <div className="flex justify-end gap-2">
                <button
                  type="button"
                  onClick={() => setEditingReview(null)}
                  className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded"
                >
                  –û—Ç–∫–∞–∂–∏
                </button>
                <button
                  type="submit"
                  className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded"
                >
                  –ó–∞–ø–∞–∑–∏
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
}
